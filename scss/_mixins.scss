$default-font: 18px;

$main-yellow: #FFD000;

$yellow-1:    #FCEE21;
$yellow-2:    #FFE400;
$yellow-neon: #ffff00;

$gold:        #aa6a00;

$blue-dark:   #00214b;
$blue-mid:    #2e3192;  
$blue-navy:   #29abe2;
//$blue-neon:   #6FF5FF;

$pink-neon:   #ff7bac;
$orange:      #f15a24;



$blue-neon:     #62e0e9;

// 01 -- 02 -- 03
// light -- dark
$blue-dark-01:  #374b62;
$blue-dark-02:  #263a50;
$blue-dark-03:  #14283e;

$blue-light-01: #ebffff;
$blue-light-02: #b7faff;
$blue-light-03: #47c1ff;

// Blue Gradient Button
$blue-gradientBtn-01: #00cfff;
$blue-gradientBtn-02: #008ddf;

// Lightblue Gradient Button
$blue-gradientBtn-light-01: #00cfff;
$blue-gradientBtn-light-02: #008ddf;

// Cancel Button
$gray-cancel: #aeaeae;


////////////////////////////////////////////////////////////////////
@mixin clearfix {
  zoom: 1;
  &:before, &:after {
    content: '';
    display: table;
  }
  &:after { clear: both; }
}
@mixin hideText() {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}
// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
// Corner Radius
@mixin borderRadius($corner) {
  -webkit-border-radius: $corner;
  -moz-border-radius: $corner;
  border-radius: $corner;
}
// Effects
@mixin dropShadow($x, $y, $blur, $size, $color) {
  -webkit-box-shadow: $x $y $blur $size $color;
  -moz-box-shadow: $x $y $blur $size $color;
  box-shadow: $x $y $blur $size $color;
  /* -ms-filter: "progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=180, Color='#000000')"; */
}
@mixin innerShadow($innerDistance, $color) {
  -webkit-box-shadow: inset 0 0 $innerDistance $color;
  -moz-box-shadow: inset 0 0 $innerDistance $color;
  box-shadow: inset 0 0 $innerDistance $color;
}
@mixin textGlow($glowDistance, $glowColor) {
  -webkit-text-shadow: 0 0 $glowDistance $glowColor;
  -moz-text-shadow: 0 0 $glowDistance $glowColor;
  text-shadow: 0 0 $glowDistance $glowColor;
}
// Gradients
@mixin linear-gradient($dir, $fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  //background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient($dir, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient($dir, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient($dir, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient($dir, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient($dir, $fromColor, $toColor);
  //filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}
@mixin radial-gradient($from, $to) {
  background: -moz-radial-gradient(center, circle cover, $from 0%, $to 100%);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, $from), color-stop(100%, $to));
  background: -webkit-radial-gradient(center, circle cover, $from 0%, $to 100%);
  background: -o-radial-gradient(center, circle cover, $from 0%, $to 100%);
  background: -ms-radial-gradient(center, circle cover, $from 0%, $to 100%);
  background: radial-gradient(center, circle cover, $from 0%, $to 100%);
  background-color: $from;
}
// Transition
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}
// Transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
// transform origin
@mixin transform-origin ($origin) {
    -moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}
// Animation & Keyframes
@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}